
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@import '~@angular/material/theming';
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat-core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$JoinARoom-primary: mat-palette($mat-indigo);
$JoinARoom-accent: mat-palette($mat-pink, A200, A100, A400);

// The warn palette is optional (defaults to red).
$JoinARoom-warn: mat-palette($mat-red);

// Create the theme object (a Sass map containing all of the palettes).
$JoinARoom-theme: mat-light-theme($JoinARoom-primary, $JoinARoom-accent, $JoinARoom-warn);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include angular-material-theme($JoinARoom-theme);

@import '../node_modules/@angular/material/theming';
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat-core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/

$app-blue: (
        50: #D75B5E,
        100: #D75B5E,
        200: #D75B5E,
        300: #D75B5E,
        400: #D75B5E,
        500: #D75B5E,
        600: #D75B5E,
        700: #D75B5E,
        800: #D75B5E,
        900: #D75B5E,
        A100: #D75B5E,
        A200: #D75B5E,
        A400: #D75B5E,
        A700: #D75B5E,
        contrast: (
                50: $dark-primary-text,
                100: $dark-primary-text,
                200: $dark-primary-text,
                300: $dark-primary-text,
                400: $dark-primary-text,
                500: $light-primary-text,
                600: $light-primary-text,
                700: $light-primary-text,
                800: $light-primary-text,
                900: $light-primary-text,
                A100: $dark-primary-text,
                A200: $dark-primary-text,
                A400: $dark-primary-text,
                A700: $light-primary-text,
        )
);

$candy-app-primary: mat-palette($app-blue);
$candy-app-accent:  mat-palette($app-blue, A200, A100, A400);

// The warn palette is optional (defaults to red).
$candy-app-warn:    mat-palette($mat-red);

// Create the theme object (a Sass map containing all of the palettes).
$candy-app-theme: mat-light-theme($candy-app-primary, $candy-app-accent, $candy-app-warn);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include angular-material-theme($candy-app-theme);
